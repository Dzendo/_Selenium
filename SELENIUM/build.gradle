buildscript {
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.4.4') //3.4.3')
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'io.qameta.allure' version '2.11.2' //'2.9.3'
}

apply plugin: 'net.serenity-bdd.aggregator'

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.22.0' // '2.20.1'
    fluentleniumVersion = '5.0.4'
    junitVersion = '5.9.3' //'5.9.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    testImplementation('com.codeborne:selenide:6.14.1') //6.11.0')
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation('net.serenity-bdd:serenity-core:3.7.1') // 3.4.3')
    testImplementation('net.serenity-bdd:serenity-junit:3.7.1')
    testImplementation("org.fluentlenium:fluentlenium-core:${fluentleniumVersion}")
    testImplementation("org.fluentlenium:fluentlenium-assertj:${fluentleniumVersion}")
    testImplementation("org.fluentlenium:fluentlenium-junit-jupiter:${fluentleniumVersion}")
    testImplementation('com.epam.jdi:jdi-light-html:1.4.11') // 1.4.8')
    testImplementation('io.github.bonigarcia:webdrivermanager:5.3.3') //5.3.1')
    testImplementation('org.assertj:assertj-core:3.24.2')
    testImplementation('com.google.truth:truth:1.1.3')
    testImplementation('org.hamcrest:hamcrest:2.2')
    testImplementation('org.slf4j:slf4j-simple:2.0.7') //2.0.6')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:${junitVersion}")

    //implementation("org.seleniumhq.selenium:selenium-http-jdk-client:4.9.1")
}

test {
    useJUnitPlatform()
}
allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}